{"ast":null,"code":"var _jsxFileName = \"/Users/hkobashi/study/react-basic-drf/src/components/DRFApiFetch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DRFApiFetch = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState([]);\n  const [editedTask, setEditedTask] = useState({\n    id: '',\n    title: ''\n  });\n  const [id, setId] = useState(1);\n  useEffect(() => {\n    axios.get('http://127.0.0.1:8000/api/tasks/', {\n      headers: {\n        'Authorization': 'Token 8e8293199a3edd702edc83f18e5c4de03adbad06'\n      }\n    }).then(res => {\n      setTasks(res.data);\n    });\n  }, []);\n\n  const newTask = task => {\n    const data = {\n      title: task.title\n    };\n    axios.post(`http://127.0.0.1:8000/api/tasks/`, data, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Token 8e8293199a3edd702edc83f18e5c4de03adbad06'\n      }\n    }).then(res => {\n      setTasks([...tasks, res.data]);\n    });\n  };\n\n  const getTask = () => {\n    axios.get(`http://127.0.0.1:8000/api/tasks/${id}`, {\n      headers: {\n        'Authorization': 'Token 8e8293199a3edd702edc83f18e5c4de03adbad06'\n      }\n    }).then(res => {\n      setSelectedTask(res.data);\n    });\n  };\n\n  const editTask = task => {\n    axios.put(`http://127.0.0.1:8000/api/tasks/${task.id}/`, task, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Token 8e8293199a3edd702edc83f18e5c4de03adbad06'\n      }\n    }).then(res => {\n      setTasks(tasks.map(task => task.id === editedTask.id ? res.data : task));\n      setEditedTask({\n        id: '',\n        title: ''\n      });\n    });\n  };\n\n  const deleteTask = id => {\n    axios.delete(`http://127.0.0.1:8000/api/tasks/${id}`, {\n      headers: {\n        'Authorization': 'Token 8e8293199a3edd702edc83f18e5c4de03adbad06'\n      }\n    }).then(res => {\n      setTasks(tasks.filter(task => task.id !== id));\n      setSelectedTask([]);\n    });\n  };\n\n  const handleInputChange = () => evt => {\n    const value = evt.target.value;\n    const name = evt.target.name;\n    setEditedTask({ ...editedTask,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", task.title, \" \", task.id, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditedTask(task),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-pen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task.id),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-trash-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), \"Set id \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: id,\n      onChange: evt => {\n        setId(evt.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => getTask(),\n      children: \"Get task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [selectedTask.title, \" \", selectedTask.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      value: editedTask.title,\n      onChange: handleInputChange(),\n      placeholder: \"New task?\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), editedTask.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => editTask(editedTask),\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => newTask(editedTask),\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DRFApiFetch, \"Jk5BtryxaMrQmlg7Q0ChMFE6Tck=\");\n\n_c = DRFApiFetch;\nexport default DRFApiFetch;\n\nvar _c;\n\n$RefreshReg$(_c, \"DRFApiFetch\");","map":{"version":3,"sources":["/Users/hkobashi/study/react-basic-drf/src/components/DRFApiFetch.js"],"names":["React","useState","useEffect","axios","DRFApiFetch","tasks","setTasks","selectedTask","setSelectedTask","editedTask","setEditedTask","id","title","setId","get","headers","then","res","data","newTask","task","post","getTask","editTask","put","map","deleteTask","delete","filter","handleInputChange","evt","value","target","name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nconst DRFApiFetch = () => {\n  \n  const [tasks, setTasks] = useState([])\n  const [selectedTask, setSelectedTask] = useState([])\n  const [editedTask, setEditedTask] = useState({id: '', title: ''})\n  const [id, setId] = useState(1)\n\n  useEffect(() => {\n    axios.get('http://127.0.0.1:8000/api/tasks/', {\n      headers: {\n        'Authorization': 'Token 8e8293199a3edd702edc83f18e5c4de03adbad06'\n      }\n    })\n    .then(res => {setTasks(res.data)})\n  },[])\n\n  const newTask = (task) => {\n    const data = {\n      title: task.title\n    }\n    axios.post(`http://127.0.0.1:8000/api/tasks/`, data,{\n      headers: {\n        'Content-Type': 'application/json',\n\n        'Authorization': 'Token 8e8293199a3edd702edc83f18e5c4de03adbad06'\n      }})\n      .then(res => {setTasks([...tasks, res.data])\n    })\n  }\n\n  const getTask = () => {\n    axios.get(`http://127.0.0.1:8000/api/tasks/${id}`, {\n      headers: {\n        'Authorization': 'Token 8e8293199a3edd702edc83f18e5c4de03adbad06'\n      }})\n      .then(res => {setSelectedTask(res.data)\n    })\n  }\n\n  const editTask = (task) => {\n    axios.put(`http://127.0.0.1:8000/api/tasks/${task.id}/`, task ,{\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Token 8e8293199a3edd702edc83f18e5c4de03adbad06'\n      }})\n      .then(res => {setTasks(tasks.map(task => (task.id === editedTask.id ? res.data : task)));\n        setEditedTask({id:'', title:''})\n      })\n  }\n\n  const deleteTask = (id) => {\n    axios.delete(`http://127.0.0.1:8000/api/tasks/${id}`, {\n      headers: {\n        'Authorization': 'Token 8e8293199a3edd702edc83f18e5c4de03adbad06'\n      }})\n      .then(res => {setTasks(tasks.filter(task => task.id !== id)); setSelectedTask([])})\n    }\n\n    const handleInputChange = () => evt => {\n      const value = evt.target.value;\n      const name =evt.target.name;\n      setEditedTask({...editedTask, [name]:value})\n    }\n\n\n  return (\n    <div>\n      <ul>\n        {\n          tasks.map(task => <li key={task.id}> {task.title} {task.id}\n          <button onClick={()=>setEditedTask(task)}>\n            <i className=\"fas fa-pen\"></i>\n          </button>\n          <button onClick={()=>deleteTask(task.id)}>\n            <i className=\"fas fa-trash-alt\"></i>\n          </button>\n          </li>)\n\n        }\n      </ul>\n\n      Set id <br/>\n      <input type='text' value={id} onChange={evt=>{setId(evt.target.value)}}/>\n      <br/>\n      <button type='button' onClick={()=>getTask()}>Get task</button>\n      {/* <button type='button' onClick={()=>deleteTask()}>Delete task</button> */}\n      <h3>{selectedTask.title} {selectedTask.id}</h3>\n\n      <input type=\"text\" name=\"title\"\n        value={editedTask.title}\n        onChange={handleInputChange()}\n        placeholder=\"New task?\" required/>\n        { editedTask.id ?\n        <button onClick={()=>editTask(editedTask)}>Update</button> :\n        <button onClick={()=>newTask(editedTask)}>Create</button> }\n    </div>\n  )\n}\n\nexport default DRFApiFetch\n"]},"metadata":{},"sourceType":"module"}